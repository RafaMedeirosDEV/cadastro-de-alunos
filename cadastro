#criar interface gráfica
#criar classes para organizar o códiago# integração com banco de dados Sqlite# campo de cadastro de Nome, nascimento, cpf, cartão do sus, endereço, cid, responsável, contato do responsável, alergias, observações.
# botoes de registrar, alterar, deletar , limpar tela, buscar
# mostrar na tela.

from tkinter import *
import sqlite3
from tkinter import ttk

interface = Tk()

#criando uma classe para receber funções
class Aplicativo():
    def __init__(self):
        self.interface = interface
        self.tela()
        self.frame_tela()
        self.rotulos()
        self.entradas_de_dados()
        self.botoes()
        self.lista_frame2()
        interface.mainloop()

#crinado uma função de Interface e estilizando a Interface

    def tela(self):
        self.interface.title('Cadastro de Alunos')
        self.interface.configure(background='#123456')
        self.interface.geometry('900x500')
        self.interface.resizable(True,True)
        self.interface.minsize(width=400, height=250)

#criando a separação de Frame de Tela  e 2

    def frame_tela(self):
        self.frame_1 = Frame(self.interface,bd=4,highlightbackground='#759feb',highlightthickness=2)
        self.frame_1.place(relx=0.02,rely=0.02,relwidth=0.96,relheight=0.55)
        
        self.frame_2 = Frame(self.interface,bd=4,highlightbackground='#759feb',highlightthickness=2)
        self.frame_2.place(relx=0.02,rely=0.59,relwidth=0.96,relheight=0.39)

#criando rótulos para a entrada de dados que serão cadastrados

    def rotulos(self):
        self.nome_label = Label(self.frame_1,text='Nome',font=('verdana',11,'bold'))
        self.nome_label.place(relx=0.01,rely=0.02,relwidth=0.13,relheight=0.12)

        self.cpf_label= Label(self.frame_1,text='CPF',font=('verdana',11,'bold'))
        self.cpf_label.place(relx=0.50,rely=0.02,relwidth=0.13,relheight=0.12)

        self.nascimento_label = Label(self.frame_1,text='Nascimento',font=('verdana',11,'bold'))
        self.nascimento_label.place(relx=0.01,rely=0.18,relwidth=0.13,relheight=0.12)

        self.sus_label = Label(self.frame_1,text='Nº SUS',font=('verdana',11,'bold'))
        self.sus_label.place(relx=0.01,rely=0.34,relwidth=0.13,relheight=0.12)

        self.telefone_label = Label(self.frame_1,text='Contato',font=('verdana',11,'bold'))
        self.telefone_label.place(relx=0.01,rely=0.49,relwidth=0.13,relheight=0.12)

        self.alergia_label = Label(self.frame_1,text='Alergia',font=('verdana',11,'bold'))
        self.alergia_label.place(relx=0.01,rely=0.66,relwidth=0.13,relheight=0.12)

        self.observacao_label = Label(self.frame_1,text='Observações', font=('verdana',11,'bold'))
        self.observacao_label.place(relx=0.01,rely=0.82,relwidth=0.13,relheight=0.12)

#Criando função de entrada que receberão os dados cadastrados
    
    def entradas_de_dados(self):
        self.nome_entry = Entry(self.frame_1,font=('arial',12))
        self.nome_entry.place(relx=0.15,rely=0.02,relwidth=0.37,relheight=0.12)

        self.cpf_entry = Entry(self.frame_1,font=('arial',12))
        self.cpf_entry.place(relx=0.60,rely=0.02,relwidth=0.2,relheight=0.12)

        self.nascimento_entry = Entry(self.frame_1,font=('arial',12))
        self.nascimento_entry.place(relx=0.15,rely=0.18,relwidth=0.37,relheight=0.12)

        self.sus_entry = Entry(self.frame_1,font=('arial',12))
        self.sus_entry.place(relx=0.15,rely=0.34,relwidth=0.37,relheight=0.12)

        self.telefone_entry = Entry(self.frame_1,font=('arial',12))
        self.telefone_entry.place(relx=0.15,rely=0.49,relwidth=0.37,relheight=0.12)

        self.alergia_entry = Entry(self.frame_1,font=('arial',12))
        self.alergia_entry.place(relx=0.15,rely=0.66,relwidth=0.37,relheight=0.12)

        self.observacao_entry = Entry(self.frame_1, font=('arial',12))
        self.observacao_entry.place(relx=0.15,rely=0.82,relwidth=0.37,relheight=0.12)

 #crinado botões CRUD, para Buscar, cadastrar, Limpar tela, Alterar e Deletar

    def botoes(self):
        self.buscar = Button(self.frame_1,text='BUSCAR',bd=4)
        self.buscar.place(relx=0.82,rely=0.02,relwidth=0.15,relheight=0.15)

        self.cadastrar = Button(self.frame_1,text='CADASTRAR',bd=4)
        self.cadastrar.place(relx=0.82,rely=0.21,relwidth=0.15,relheight=0.15)

        self.limpar = Button(self.frame_1,text='LIMPAR TELA',bd=4)
        self.limpar.place(relx=0.82,rely=0.40,relwidth=0.15,relheight=0.15)

        self.alterar = Button(self.frame_1,text='ALTERAR',bd=4)
        self.alterar.place(relx=0.82,rely=0.59,relwidth=0.15,relheight=0.15)

        self.deletar = Button(self.frame_1,text='DELETAR',bd=4)
        self.deletar.place(relx=0.82,rely=0.78,relwidth=0.15,relheight=0.15)

#criando visualização no frame2 com o Treeview
    def lista_frame2(self):
        self.lista_alunos = ttk.Treeview(self.frame_2,height=3,columns=('col1','col','col3','col4',
                                                                        'col5','col6','col7'))
#nomeando as colunas do treeview

        self.lista_alunos.heading('#0',text='')
        self.lista_alunos.heading('#1',text='Nome')
        self.lista_alunos.heading('#2',text='CPF')
        self.lista_alunos.heading('#3',text='Nascimento')
        self.lista_alunos.heading('#4',text='Nº do SUS')
        self.lista_alunos.heading('#5',text='Telefone')
        self.lista_alunos.heading('#6',text='Alergias')
        self.lista_alunos.heading('#7',text='Obs.')

#dimensionando as colunas, obs.a colula #0 precisa ser colocada pois ela é um padrão, entao para não ocupar espaça colocamos o menor valor

        self.lista_alunos.column('#0',width=1)
        self.lista_alunos.column('#1',width=100)
        self.lista_alunos.column('#2',width=50)
        self.lista_alunos.column('#3',width=50)
        self.lista_alunos.column('#4',width=50)
        self.lista_alunos.column('#5',width=50)
        self.lista_alunos.column('#6',width=50)
        self.lista_alunos.column('#7',width=100)

        self.lista_alunos.place(relx=0.01,rely=0.01,relheight=0.90,relwidth=0.90)


Aplicativo()